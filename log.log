amd64 JIT by Samuel Michael Squire
	https://github.com/samsquire/compiler

pagesize: 4096

Parsing code
function talker(int a, int b) {
  return a + b;
}
printf("value: %d\n", 1 + talker(6, 7));
printf("value2: %d\n", talker(8, 9));
9 + 11;
FIRST INTO 0x5587b85ca8a0
HASH TABLE 200
case 6953778704349: /* member */ 
break;
case 7572387384277067: /* function */ 
break;
case 5863476: /* if */ 
break;
case 6953974653989: /* return */ 
break;
case 6385555319: /* open */ 
break;
case 210708961883: /* close */ 
break;
case 210709067314: /* comma */ 
break;
case 193486030: /* add */ 
break;
case 7572940974490733: /* subtract */ 
break;
case 7572685654880005: /* multiply */ 
break;
case 193504464: /* rax */ 
break;
case 193504497: /* rbx */ 
break;
case 193504530: /* rcx */ 
break;
case 193504563: /* rdx */ 
break;
case 193505043: /* rsi */ 
break;
case 193504548: /* rdi */ 
break;
case 193505050: /* rsp */ 
break;
case 5863727: /* r8 */ 
break;
case 5863728: /* r9 */ 
break;
case 193502808: /* r10 */ 
break;
case 193502809: /* r11 */ 
break;
case 193502810: /* r12 */ 
break;
case 193502811: /* r13 */ 
break;
case 193502812: /* r14 */ 
break;
case 193502813: /* r15 */ 
break;

Getting token
parsebegin Skipping whitespace

-1 rc is
functionfunctionbodybegin Skipping whitespace

-1 rc is
Is a function talker
open
-1 rc is
funcparamname Skipping whitespace

-1 rc is
type is int name is a
there are 0 parameters
loopparameterlist Skipping whitespace

-1 rc is
funcparamname Skipping whitespace

-1 rc is
type is int name is b
there are 1 parameters
commacheck CLOSE TAG
loopparameterlist CLOSE TAG
functioncurlyopencheck Skipping whitespace
function parse INTO 0x5587b85cba50functionbodyitem Skipping whitespace
functionbodyitem Skipping whitespace
functionbodyitem Skipping whitespace

-1 rc is
Hash for token return is 6953974653989
functionparse Return statement
0x5587b85cba50
functionbodyitem Skipping whitespace

-1 rc is
Hash for token a is 177670
functionparse parseexpression Is an identifier a
identifier expression 0x5587b85cce20
statements 0x5587b85cc240
expression location 0 0x5587b85cca90
 identifier a 0
functionbodyitem Skipping whitespace
Hash for token add is 193486030
functionbodyitem Skipping whitespace

-1 rc is
Hash for token b is 177671
functionparse parseexpression Is an identifier b
identifier expression 0x5587b85ce310
statements 0x5587b85cdb20
expression location 1 0x5587b85cdf80
 identifier a 0
 identifier b 0
functionbodyitem CLOSE expression
Hash for token endstatement is -3372849529167478127
functionparse End of statement
functionbodyitem Skipping whitespace
Getting token
parsebegin Skipping whitespace

-1 rc is
printffunctionparse Funcbody Is an identifier printf
functionparse New position is 0
identifier INTO 0x5587b85ca8a0
Hash for token open is 6385555319
open bracket
OWNER 0
 identifier printf 0
expression location 1 0x5587b85cebc0
 method call method 0
  identifier printf 0
Parsing subexpression


inside a quote


-1 rc is
Hash for token value: %d\n is -4548700709794970353
exprparse parseexpression Is an identifier value: %d\n
identifier expression 0x5587b85cfe10
statements 0x5587b85cf630
expression location 1 0x5587b85cfa80
 identifier printf 0
 identifier value: %d\n 0
Hash for token comma is 210709067314
exprparse Comma encountered, creating new statement
functionbodyitem Skipping whitespace

-1 rc is
Hash for token 1 is 177622
exprparse parseexpression Is an identifier 1
identifier expression 0x5587b85d0680
statements 0x5587b85d01a0
expression location 0 0x5587b85d0620
 identifier 1 1
functionbodyitem Skipping whitespace
Hash for token add is 193486030
functionbodyitem Skipping whitespace

-1 rc is
Hash for token talker is 6954047882280
exprparse parseexpression Is an identifier talker
identifier expression 0x5587b85d9200
statements 0x5587b85d06e0
expression location 1 0x5587b85d8e70
 identifier 1 1
 identifier talker 0
Hash for token open is 6385555319
open bracket
OWNER 1
 identifier 1 1
 identifier talker 0
expression location 1 0x5587b85d8e70
 identifier 1 1
 method call method 0
  identifier talker 0
Parsing subexpression

-1 rc is
Hash for token 6 is 177627
exprparse parseexpression Is an identifier 6
identifier expression 0x5587b85da460
statements 0x5587b85d9f40
expression location 1 0x5587b85da0d0
 identifier talker 0
 identifier 6 6
Hash for token comma is 210709067314
exprparse Comma encountered, creating new statement
functionbodyitem Skipping whitespace

-1 rc is
Hash for token 7 is 177628
exprparse parseexpression Is an identifier 7
identifier expression 0x5587b85db000
statements 0x5587b85da7f0
expression location 0 0x5587b85dac70
 identifier 7 7
functionbodyitem CLOSE TAG
functionbodyitem CLOSE TAG
functionbodyitem CLOSE expression
Hash for token endstatement is -3372849529167478127
identifier End of statement
functionbodyitem Skipping whitespace

-1 rc is
Hash for token printf is 6953911397304
identifier parseexpression Is an identifier printf
identifier expression 0x5587b85dbc40
statements 0x5587b85db390
expression location 0 0x5587b85db8b0
 identifier printf 0
Hash for token open is 6385555319
open bracket
OWNER 0
 identifier printf 0
expression location 1 0x5587b85db8b0
 method call method 0
  identifier printf 0
Parsing subexpression


inside a quote


-1 rc is
Hash for token value2: %d\n is -2533170842880017663
exprparse parseexpression Is an identifier value2: %d\n
identifier expression 0x5587b85dd180
statements 0x5587b85dc980
expression location 1 0x5587b85dcdf0
 identifier printf 0
 identifier value2: %d\n 0
Hash for token comma is 210709067314
exprparse Comma encountered, creating new statement
functionbodyitem Skipping whitespace

-1 rc is
Hash for token talker is 6954047882280
exprparse parseexpression Is an identifier talker
identifier expression 0x5587b85dddc0
statements 0x5587b85dd510
expression location 0 0x5587b85dda30
 identifier talker 0
Hash for token open is 6385555319
open bracket
OWNER 0
 identifier talker 0
expression location 1 0x5587b85dda30
 method call method 0
  identifier talker 0
Parsing subexpression

-1 rc is
Hash for token 8 is 177629
exprparse parseexpression Is an identifier 8
identifier expression 0x5587b85e3fe0
statements 0x5587b85dde40
expression location 1 0x5587b85e3c50
 identifier talker 0
 identifier 8 8
Hash for token comma is 210709067314
exprparse Comma encountered, creating new statement
functionbodyitem Skipping whitespace

-1 rc is
Hash for token 9 is 177630
exprparse parseexpression Is an identifier 9
identifier expression 0x5587b85e4b80
statements 0x5587b85e4370
expression location 0 0x5587b85e47f0
 identifier 9 9
functionbodyitem CLOSE TAG
functionbodyitem CLOSE TAG
functionbodyitem CLOSE expression
Hash for token endstatement is -3372849529167478127
identifier End of statement
functionbodyitem Skipping whitespace

-1 rc is
Hash for token 9 is 177630
identifier parseexpression Is an identifier 9
identifier expression 0x5587b85e5720
statements 0x5587b85e4f10
expression location 0 0x5587b85e5390
 identifier 9 9
functionbodyitem Skipping whitespace
Hash for token add is 193486030
functionbodyitem Skipping whitespace

-1 rc is
Hash for token 11 is 5861575
identifier parseexpression Is an identifier 11
identifier expression 0x5587b85e6c30
statements 0x5587b85e6420
expression location 1 0x5587b85e68a0
 identifier 9 9
 identifier 11 11
end early
functionbodyitem CLOSE expression
#### Code:
function talker(int a, int b) {
  return a + b;
}
printf("value: %d\n", 1 + talker(6, 7));
printf("value2: %d\n", talker(8, 9));
9 + 11;
Dumping AST
 method call method 0
  identifier printf 0
  identifier value: %d\n 0
  add (null) 0
   identifier 1 1
   method call method 0
    identifier talker 0
    identifier 6 6
    identifier 7 7
 method call method 0
  identifier printf 0
  identifier value2: %d\n 0
  method call method 0
   identifier talker 0
   identifier 8 8
   identifier 9 9
 add (null) 0
  identifier 9 9
  identifier 11 11
##########Function talker
- parameter name a
- parameter type int
- parameter name b
- parameter type int
Has 2 statements
 return (null) 0
  add (null) 0
   identifier a 0
   identifier b 0
Dumping ANF
ANF for function talker
identifier b 0
identifier a 0
add
return
ANF for main
identifier 7 7
identifier 6 6
identifier talker 0
method call
identifier 1 1
add
identifier value: %d\n 0
identifier printf 0
method call
identifier 9 9
identifier 8 8
identifier talker 0
method call
identifier value2: %d\n 0
identifier printf 0
method call
identifier 11 11
identifier 9 9
add
Assigning registers
Found method call
Found expression in method call 5 talker rdi
Found expression in method call 5 6 rsi
Found expression in method call 5 7 rax
Found method call
Found expression in method call 5 printf rdi
Found expression in method call 5 value: %d\n rsi
Found expression in method call 6 (null) rax
Found method call
Found expression in method call 5 talker rdi
Found expression in method call 5 8 rsi
Found expression in method call 5 9 rax
Found method call
Found expression in method call 5 printf rdi
Found expression in method call 5 value2: %d\n rsi
Found expression in method call 3 method rax
submethodcall
Found expression in method call 5 talker rdi
Found expression in method call 5 8 rsi
Found expression in method call 5 9 rax
FOUND PRECOLOURED REGISTER 0x5587b8090539
Created a identifier reference
FOUND PRECOLOURED REGISTER 0x5587b8090549
Created a identifier reference
FOUND PRECOLOURED REGISTER 0x5587b809054d
Created a identifier reference
Method call Assigning 10 to variable t0
Created a identifier reference
FOUND PRECOLOURED REGISTER 0x5587b8090539
Add operation Assigning 8 to variable t2
FOUND PRECOLOURED REGISTER 0x5587b8090549
Created a identifier reference
FOUND PRECOLOURED REGISTER 0x5587b809054d
Created a identifier reference
Method call Assigning 5 to variable t3
FOUND PRECOLOURED REGISTER 0x5587b8090539
Created a identifier reference
FOUND PRECOLOURED REGISTER 0x5587b8090549
Created a identifier reference
FOUND PRECOLOURED REGISTER 0x5587b809054d
Created a identifier reference
FOUND PRECOLOURED REGISTER 0x5587b8090539
Method call Assigning 17 to variable t5
FOUND PRECOLOURED REGISTER 0x5587b8090549
Created a identifier reference
FOUND PRECOLOURED REGISTER 0x5587b809054d
Created a identifier reference
Method call Assigning 14 to variable t7
Created a identifier reference
Created a identifier reference
Add operation Assigning 21 to variable t9
7 <- 7
6 <- 6
talker <- talker
t1 <- talker(6 , 7 , )
1 <- 1
t2 <- 1 + t1
value: %d\n <- value: %d\n
printf <- printf
t4 <- printf(value: %d\n , t2 , )
9 <- 9
8 <- 8
talker <- talker
t6 <- talker(8 , 9 , )
value2: %d\n <- value2: %d\n
printf <- printf
t8 <- printf(value2: %d\n , t6 , )
11 <- 11
9 <- 9
t9 <- 9 + 11
Created a identifier reference
Created a identifier reference
Add operation Assigning 2 to variable t0
Return operation Assigning 0 to variable t1
b <- b
a <- a
t0 <- a + b
t1 <- t0 (ret)


from /proc/self/maps:
5587b85c9000-5587b8609000 rw-p 00000000 00:00 0                          [heap]
heap start is 5587b85c9000
7
looking up 7
key doesn't exist
6
looking up 6
key doesn't exist
talker
looking up talker
key doesn't exist
talker
looking up talker
key exists
6
looking up 6
key exists
7
looking up 7
key exists
1
looking up 1
key doesn't exist
1
looking up 1
key exists
t1
looking up t1
key doesn't exist
value: %d\n
looking up value: %d\n
key doesn't exist
printf
looking up printf
key doesn't exist
printf
looking up printf
key exists
value: %d\n
looking up value: %d\n
key exists
t2
looking up t2
key doesn't exist
9
looking up 9
key doesn't exist
8
looking up 8
key doesn't exist
talker
looking up talker
key exists
talker
looking up talker
key exists
8
looking up 8
key exists
9
looking up 9
key exists
value2: %d\n
looking up value2: %d\n
key doesn't exist
printf
looking up printf
key exists
printf
looking up printf
key exists
value2: %d\n
looking up value2: %d\n
key exists
t6
looking up t6
key doesn't exist
11
looking up 11
key doesn't exist
9
looking up 9
key exists
9
looking up 9
key exists
11
looking up 11
key exists
Variable 7 appears 0-3
Variable 6 appears 1-3
Variable talker appears 2-12
Variable 1 appears 4-5
Variable t1 appears 3-5
Variable value: %d\n appears 6-8
Variable printf appears 7-15
Variable t2 appears 5-8
Variable 9 appears 9-18
Variable 8 appears 10-12
Variable value2: %d\n appears 13-15
Variable t6 appears 12-15
Variable 11 appears 16-18
### DOING GRAPH COLOURING
19 assignments
Variable 0: 12-7 
Found reference 12-7 to 7
identifier 7 7
Forward link to 12-7 NOT found
0x5587b8604570
Links to 12-7
- 7
Variable 1: 11-6 
Found reference 11-6 to 6
identifier 6 6
Forward link to 11-6 NOT found
0x5587b8604900
Links to 11-6
- 6
Variable 2: 9-talker 
Found reference 9-talker to talker
identifier talker 0
Forward link to 9-talker NOT found
0x5587b8604c90
Links to 9-talker
- talker
Variable 3: 10-t0 
Found reference 10-t0 to talker
method call method 0
 identifier talker 0
 identifier 6 6
 identifier 7 7
Forward link to 10-t0 NOT found
0x5587b8605060
Links to 10-t0
- talker
Found reference 10-t0 to 6
method call method 0
 identifier talker 0
 identifier 6 6
 identifier 7 7
Forward link to 10-t0 found
0x5587b8605060
Links to 10-t0
- talker
- 6
Found reference 10-t0 to 7
method call method 0
 identifier talker 0
 identifier 6 6
 identifier 7 7
Forward link to 10-t0 found
0x5587b8605060
Links to 10-t0
- talker
- 6
- 7
Variable 4: 7-1 
Found reference 7-1 to 1
identifier 1 1
Forward link to 7-1 NOT found
0x5587b86054f0
Links to 7-1
- 1
Variable 5: 8-t2 
Found reference 8-t2 to 1
add (null) 0
 identifier 1 1
 method call method 0
  identifier talker 0
  identifier 6 6
  identifier 7 7
Forward link to 8-t2 NOT found
0x5587b86058e0
Links to 8-t2
- 1
Found reference 8-t2 to t1
add (null) 0
 identifier 1 1
 method call method 0
  identifier talker 0
  identifier 6 6
  identifier 7 7
Forward link to 8-t2 found
0x5587b86058e0
Links to 8-t2
- 1
- t1
Variable 6: 6-value: %d\n 
Found reference 6-value: %d\n to value: %d\n
identifier value: %d\n 0
Forward link to 6-value: %d\n NOT found
0x5587b8605d10
Links to 6-value: %d\n
- value: %d\n
Variable 7: 4-printf 
Found reference 4-printf to printf
identifier printf 0
Forward link to 4-printf NOT found
0x5587b86060a0
Links to 4-printf
- printf
Variable 8: 5-t3 
Found reference 5-t3 to printf
method call method 0
 identifier printf 0
 identifier value: %d\n 0
 add (null) 0
  identifier 1 1
  method call method 0
   identifier talker 0
   identifier 6 6
   identifier 7 7
Forward link to 5-t3 NOT found
0x5587b86064d0
Links to 5-t3
- printf
Found reference 5-t3 to value: %d\n
method call method 0
 identifier printf 0
 identifier value: %d\n 0
 add (null) 0
  identifier 1 1
  method call method 0
   identifier talker 0
   identifier 6 6
   identifier 7 7
Forward link to 5-t3 found
0x5587b86064d0
Links to 5-t3
- printf
- value: %d\n
Found reference 5-t3 to t2
method call method 0
 identifier printf 0
 identifier value: %d\n 0
 add (null) 0
  identifier 1 1
  method call method 0
   identifier talker 0
   identifier 6 6
   identifier 7 7
Forward link to 5-t3 found
0x5587b86064d0
Links to 5-t3
- printf
- value: %d\n
- t2
Variable 9: 19-9 
Found reference 19-9 to 9
identifier 9 9
Forward link to 19-9 NOT found
0x5587b8606a20
Links to 19-9
- 9
Variable 10: 18-8 
Found reference 18-8 to 8
identifier 8 8
Forward link to 18-8 NOT found
0x5587b8606db0
Links to 18-8
- 8
Variable 11: 16-talker 
Found reference 16-talker to talker
identifier talker 0
Forward link to 16-talker NOT found
0x5587b8607140
Links to 16-talker
- talker
Variable 12: 17-t5 
Found reference 17-t5 to talker
method call method 0
 identifier talker 0
 identifier 8 8
 identifier 9 9
Forward link to 17-t5 NOT found
0x5587b8607510
Links to 17-t5
- talker
Found reference 17-t5 to 8
method call method 0
 identifier talker 0
 identifier 8 8
 identifier 9 9
Forward link to 17-t5 found
0x5587b8607510
Links to 17-t5
- talker
- 8
Found reference 17-t5 to 9
method call method 0
 identifier talker 0
 identifier 8 8
 identifier 9 9
Forward link to 17-t5 found
0x5587b8607510
Links to 17-t5
- talker
- 8
- 9
Variable 13: 15-value2: %d\n 
Found reference 15-value2: %d\n to value2: %d\n
identifier value2: %d\n 0
Forward link to 15-value2: %d\n NOT found
0x5587b86079a0
Links to 15-value2: %d\n
- value2: %d\n
Variable 14: 13-printf 
Found reference 13-printf to printf
identifier printf 0
Forward link to 13-printf NOT found
0x5587b8607d30
Links to 13-printf
- printf
Variable 15: 14-t7 
Found reference 14-t7 to printf
method call method 0
 identifier printf 0
 identifier value2: %d\n 0
 method call method 0
  identifier talker 0
  identifier 8 8
  identifier 9 9
Forward link to 14-t7 NOT found
0x5587b8608140
Links to 14-t7
- printf
Found reference 14-t7 to value2: %d\n
method call method 0
 identifier printf 0
 identifier value2: %d\n 0
 method call method 0
  identifier talker 0
  identifier 8 8
  identifier 9 9
Forward link to 14-t7 found
0x5587b8608140
Links to 14-t7
- printf
- value2: %d\n
Found reference 14-t7 to t6
method call method 0
 identifier printf 0
 identifier value2: %d\n 0
 method call method 0
  identifier talker 0
  identifier 8 8
  identifier 9 9
Forward link to 14-t7 found
0x5587b8608140
Links to 14-t7
- printf
- value2: %d\n
- t6
Variable 16: 22-11 
Found reference 22-11 to 11
identifier 11 11
Forward link to 22-11 NOT found
0x5587b8608650
Links to 22-11
- 11
Variable 17: 20-9 
Found reference 20-9 to 9
identifier 9 9
Forward link to 20-9 NOT found
0x5587b86089e0
Links to 20-9
- 9
Variable 18: 21-t9 
Found reference 21-t9 to 9
add (null) 0
 identifier 9 9
 identifier 11 11
Forward link to 21-t9 NOT found
0x5587b8608d90
Links to 21-t9
- 9
Found reference 21-t9 to 11
add (null) 0
 identifier 9 9
 identifier 11 11
Forward link to 21-t9 found
0x5587b8608d90
Links to 21-t9
- 9
- 11
FOUND EDGE WITH EDGE COUNT < 6 t6
identifier talker 0
identifier 8 8
FOUND EDGE WITH EDGE COUNT < 6 6
FOUND EDGE WITH EDGE COUNT < 6 printf
FOUND EDGE WITH EDGE COUNT < 6 talker
FOUND EDGE WITH EDGE COUNT < 6 9
FOUND EDGE WITH EDGE COUNT < 6 7
FOUND EDGE WITH EDGE COUNT < 6 value2: %d\n
FOUND EDGE WITH EDGE COUNT < 6 talker
FOUND EDGE WITH EDGE COUNT < 6 printf
FOUND EDGE WITH EDGE COUNT < 6 value: %d\n
FOUND EDGE WITH EDGE COUNT < 6 t1
identifier talker 0
identifier 6 6
FOUND EDGE WITH EDGE COUNT < 6 t4
identifier printf 0
identifier value: %d\n 0
FOUND EDGE WITH EDGE COUNT < 6 11
FOUND EDGE WITH EDGE COUNT < 6 8
FOUND EDGE WITH EDGE COUNT < 6 t9
identifier 9 9
identifier 11 11
FOUND EDGE WITH EDGE COUNT < 6 9
FOUND EDGE WITH EDGE COUNT < 6 1
FOUND EDGE WITH EDGE COUNT < 6 t8
identifier printf 0
identifier value2: %d\n 0
FOUND EDGE WITH EDGE COUNT < 6 t2
identifier 1 1
method call method 0
 identifier talker 0
 identifier 6 6
 identifier 7 7
Found method call
Found expression in method call 5 talker rdi
Found expression in method call 5 6 rsi
Found expression in method call 5 7 rax
Found method call
Found expression in method call 5 printf rdi
Found expression in method call 5 value: %d\n rsi
Found expression in method call 6 (null) rax
Found method call
Found expression in method call 5 talker rdi
Found expression in method call 5 8 rsi
Found expression in method call 5 9 rax
Found method call
Found expression in method call 5 printf rdi
Found expression in method call 5 value2: %d\n rsi
Found expression in method call 3 method rax
submethodcall
Found expression in method call 5 talker rdi
Found expression in method call 5 8 rsi
Found expression in method call 5 9 rax
Register colouring starting with 19 items
###### GRAPH COLOUR STACK ITEM
#### 6 registers available
 - rdi - rsi - rax - rcx - rdx - rbx
STACK ITEM
identifier 1 1
method call method 0
 identifier talker 0
 identifier 6 6
 identifier 7 7
Vertice is precoloured t2 rax
Found removed register in 2
###### GRAPH COLOUR STACK ITEM
#### 5 registers available
 - rdi - rsi - rcx - rdx - rbx
STACK ITEM
identifier printf 0
identifier value2: %d\n 0
t8 Doesn't have a register assigned
Chosen rdi
###### GRAPH COLOUR STACK ITEM
#### 4 registers available
 - rdi - rsi - rcx - rdx
STACK ITEM
1 Doesn't have a register assigned
Chosen rsi
###### GRAPH COLOUR STACK ITEM
#### 3 registers available
 - rdi - rsi - rcx
STACK ITEM
Vertice is precoloured 9 rax
###### GRAPH COLOUR STACK ITEM
#### 2 registers available
 - rdi - rsi
STACK ITEM
identifier 9 9
identifier 11 11
t9 Doesn't have a register assigned
Chosen rcx
###### GRAPH COLOUR STACK ITEM
#### 1 registers available
 - rdi
STACK ITEM
Vertice is precoloured 8 rsi
###### GRAPH COLOUR STACK ITEM
#### 6 registers available
 - rdi - rsi - rax - rcx - rdx - rbx
STACK ITEM
11 Doesn't have a register assigned
Chosen rdi
###### GRAPH COLOUR STACK ITEM
#### 5 registers available
 - rdi - rsi - rax - rcx - rdx
STACK ITEM
identifier printf 0
identifier value: %d\n 0
t4 Doesn't have a register assigned
Chosen rsi
###### GRAPH COLOUR STACK ITEM
#### 4 registers available
 - rdi - rsi - rax - rcx
STACK ITEM
identifier talker 0
identifier 6 6
t1 Doesn't have a register assigned
Chosen rax
###### GRAPH COLOUR STACK ITEM
#### 3 registers available
 - rdi - rsi - rax
STACK ITEM
Vertice is precoloured value: %d\n rsi
Found removed register in 1
###### GRAPH COLOUR STACK ITEM
#### 2 registers available
 - rdi - rax
STACK ITEM
Vertice is precoloured printf rdi
Found removed register in 0
###### GRAPH COLOUR STACK ITEM
#### 1 registers available
 - rax
STACK ITEM
Vertice is precoloured talker rdi
###### GRAPH COLOUR STACK ITEM
#### 6 registers available
 - rdi - rsi - rax - rcx - rdx - rbx
STACK ITEM
Vertice is precoloured value2: %d\n rsi
Found removed register in 1
###### GRAPH COLOUR STACK ITEM
#### 5 registers available
 - rdi - rax - rcx - rdx - rbx
STACK ITEM
Vertice is precoloured 7 rax
Found removed register in 1
###### GRAPH COLOUR STACK ITEM
#### 4 registers available
 - rdi - rcx - rdx - rbx
STACK ITEM
9 Doesn't have a register assigned
Chosen rdi
###### GRAPH COLOUR STACK ITEM
#### 3 registers available
 - rdi - rcx - rdx
STACK ITEM
Vertice is precoloured talker rdi
Found removed register in 0
###### GRAPH COLOUR STACK ITEM
#### 2 registers available
 - rcx - rdx
STACK ITEM
Vertice is precoloured printf rdi
###### GRAPH COLOUR STACK ITEM
#### 1 registers available
 - rcx
STACK ITEM
Vertice is precoloured 6 rsi
###### GRAPH COLOUR STACK ITEM
#### 6 registers available
 - rdi - rsi - rax - rcx - rdx - rbx
STACK ITEM
identifier talker 0
identifier 8 8
Vertice is precoloured t6 rax
Found removed register in 2
7 register = rax
6 register = rsi
talker register = rdi
t1 register = rax
1 register = rsi
t2 register = rax
value: %d\n register = rsi
printf register = rdi
t4 register = rsi
9 register = rax
8 register = rsi
talker register = rdi
t6 register = rax
value2: %d\n register = rsi
printf register = rdi
t8 register = rdi
11 register = rdi
9 register = rdi
t9 register = rcx
### END GRAPH COLOURING
b
looking up b
key doesn't exist
a
looking up a
key doesn't exist
a
looking up a
key exists
b
looking up b
key exists
t0
looking up t0
key doesn't exist
Variable b appears 0-2
Variable a appears 1-2
Variable t0 appears 2-3
### DOING GRAPH COLOURING
4 assignments
Variable 0: 3-b 
Found reference 3-b to b
identifier b 0
Forward link to 3-b NOT found
0x5587b860a790
Links to 3-b
- b
Variable 1: 1-a 
Found reference 1-a to a
identifier a 0
Forward link to 1-a NOT found
0x5587b860ab20
Links to 1-a
- a
Variable 2: 2-t0 
Found reference 2-t0 to a
add (null) 0
 identifier a 0
 identifier b 0
Forward link to 2-t0 NOT found
0x5587b860aed0
Links to 2-t0
- a
Found reference 2-t0 to b
add (null) 0
 identifier a 0
 identifier b 0
Forward link to 2-t0 found
0x5587b860aed0
Links to 2-t0
- a
- b
Variable 3: 0-t1 
Found reference 0-t1 to t0
return (null) 0
 add (null) 0
  identifier a 0
  identifier b 0
Forward link to 0-t1 NOT found
0x5587b860b300
Links to 0-t1
- t0
FOUND EDGE WITH EDGE COUNT < 6 t1
add (null) 0
 identifier a 0
 identifier b 0
FOUND EDGE WITH EDGE COUNT < 6 t0
identifier a 0
identifier b 0
FOUND EDGE WITH EDGE COUNT < 6 a
FOUND EDGE WITH EDGE COUNT < 6 b
Register colouring starting with 4 items
###### GRAPH COLOUR STACK ITEM
#### 6 registers available
 - rdi - rsi - rax - rcx - rdx - rbx
STACK ITEM
b Doesn't have a register assigned
Chosen rdi
###### GRAPH COLOUR STACK ITEM
#### 5 registers available
 - rdi - rsi - rax - rcx - rdx
STACK ITEM
a Doesn't have a register assigned
Chosen rsi
###### GRAPH COLOUR STACK ITEM
#### 4 registers available
 - rdi - rsi - rax - rcx
STACK ITEM
identifier a 0
identifier b 0
t0 Doesn't have a register assigned
Chosen rax
###### GRAPH COLOUR STACK ITEM
#### 3 registers available
 - rdi - rsi - rax
STACK ITEM
add (null) 0
 identifier a 0
 identifier b 0
t1 Doesn't have a register assigned
Chosen rcx
b register = rdi
a register = rsi
t0 register = rax
t1 register = rcx
### END GRAPH COLOURING
Codegen for main
generating code region for function talker 4096
Generating reference
Generating reference
Generating add
3 add bytes length
Add instruction left is rsi
Right instruction right is rdi
my register is rax
3 operand move bytes length
moving register right into destination registerMoving from rdi to rax
Generating return
Moving from rax to rax

55 48 89 f8 48 1 f0 0 
0 0 5d c3 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 GENERATING 55
Generating reference
7 7 <- 7
reference 7
Register for identifier is 
raxmov $7, %rax
48
c7
c0
7
0
0
0
Generating reference
6 6 <- 6
reference 6
Register for identifier is 
rsimov $6, %rsi
48
c7
c6
6
0
0
0
Generating method call
Resolving function talker
Inspecting function talker
talker
Method call to function talker at 0x7f9b632df000
6 0x5587b85da040
0x5587b85da040 0x5587b860c020 creating function id 94041402294304
0x5587b80276d8 creating function stub 94041396115160
Generating reference
1 1 <- 1
reference 1
Register for identifier is 
rsimov $1, %rsi
48
c7
c6
1
0
0
0
Generating add
3 add bytes length
Add instruction left is rsi
Right instruction right is rax
my register is rax
3 operand move bytes length
Generating reference
Generating method call
Resolving function printf
Inspecting function talker
printf
Method call to function printf at 0x7f9b6305c740
value: %d\n 0x5587b85cf890
0x5587b85cf890 0x5587b85cf890 relative pointer 94041402046608
0x7f9b6305c740 0x7f9b6305c740 relative pointer 140305357981504
Generating reference
9 9 <- 9
reference 9
Register for identifier is 
raxmov $9, %rax
48
c7
c0
9
0
0
0
Generating reference
8 8 <- 8
reference 8
Register for identifier is 
rsimov $8, %rsi
48
c7
c6
8
0
0
0
Generating method call
Resolving function talker
Inspecting function talker
talker
Method call to function talker at 0x7f9b632df000
8 0x5587b85e8c60
0x5587b85e8c60 0x5587b860c240 creating function id 94041402294848
0x5587b80276d8 creating function stub 94041396115160
Generating reference
Generating method call
Resolving function printf
Inspecting function talker
printf
Method call to function printf at 0x7f9b6305c740
value2: %d\n 0x5587b85dcbe0
0x5587b85dcbe0 0x5587b85dcbe0 relative pointer 94041402100704
0x7f9b6305c740 0x7f9b6305c740 relative pointer 140305357981504
Generating reference
11 11 <- 11
reference 11
Register for identifier is 
rdimov $11, %rdi
48
c7
c7
b
0
0
0
Generating reference
9 9 <- 9
reference 9
Register for identifier is 
rdimov $9, %rdi
48
c7
c7
9
0
0
0
Generating add
3 add bytes length
Add instruction left is rdi
Right instruction right is rdi
my register is rcx
3 operand move bytes length
moving register right into destination registerMoving from rdi to rcx
Main machine code

55 48 c7 c0 7 0 0 0 
48 c7 c6 6 0 0 0 48 
bf 0 0 0 0 0 0 0 
0 49 bb d8 76 2 b8 87 
55 0 0 41 ff d3 48 c7 
c6 1 0 0 0 48 1 f0 
48 bf 90 f8 5c b8 87 55 
0 0 48 b8 40 c7 5 63 
9b 7f 0 0 48 ff d0 48 
c7 c0 9 0 0 0 48 c7 
c6 8 0 0 0 48 bf 0 
0 0 0 0 0 0 0 49 
bb d8 76 2 
Executing machine code at 0x7f9b632de000
Calling compile of user function for stub 0
Generating reference
Generating reference
Generating add
3 add bytes length
Add instruction left is rsi
Right instruction right is rdi
my register is rax
3 operand move bytes length
moving register right into destination registerMoving from rdi to rax
Generating return
Moving from rax to rax
Patching callsites
Function talker compiled to 0x7f9b632df000 there are 2 callsites
0
Need to patch 0x7f9b632de000 27 with 0x7f9b632df000 0x7f9b632de01b
SUCCESS Patching callsite to 27
1
Need to patch 0x7f9b632de000 97 with 0x7f9b632df000 0x7f9b632de061
SUCCESS Patching callsite to 97
Lazy compilation talker machin